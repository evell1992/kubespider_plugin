name: build provider

on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #        os: [ ubuntu-latest, macos-latest, windows-latest ]
        os:
          - ubuntu-latest
          - macos-latest
        include:
          - os: macos-latest
            arch: x86_64
          - os: macos-latest
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install sdk/kubespider-plugin-0.1.0.tar.gz
          pip install -r ./mt/requirements.txt
          pip install -r ./nexus/requirements.txt

      - name: Build project for OS
        run: |
          pyinstaller -F ./mt/provider.py --distpath=bin --collect-all=kubespider_plugin --clean

      - name: Archive build artifacts
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-build
          path: ./mt/bin/*
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts (Ubuntu)
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest--build
          path: ./dist/
      #      - name: Download build artifacts (macOS Intel)
      #        uses: actions/download-artifact@v2
      #        with:
      #          name: macos-latest-x86_64-build
      #          path: ./dist/
      #      - name: Download build artifacts (macOS ARM)
      #        uses: actions/download-artifact@v2
      #        with:
      #          name: macos-latest-arm64-build
      #          path: ./dist/
      #      - name: Download build artifacts (Windows)
      #        uses: actions/download-artifact@v2
      #        with:
      #          name: windows-latest-x86_64-build
      #          path: ./dist/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 0.1.1
          release_name: Release 0.1
          draft: false
          prerelease: false

      - name: Upload Release Assets (Ubuntu)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mt/bin/provider
          asset_name: provider
          asset_content_type: application/octet-stream
#      - name: Upload Release Assets (macOS Intel)
#        uses: actions/upload-release-asset@v1
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./mt/bin/provider
#          asset_name: provider
#          asset_content_type: application/octet-stream
#      - name: Upload Release Assets (macOS ARM)
#        uses: actions/upload-release-asset@v1
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./mt/bin/provider
#          asset_name: provider
#          asset_content_type: application/octet-stream
#      - name: Upload Release Assets (Windows)
#        uses: actions/upload-release-asset@v1
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./dist/windows-latest-x86_64/*.whl
#          asset_name: windows-latest-x86_64.whl
#          asset_content_type: application/octet-stream